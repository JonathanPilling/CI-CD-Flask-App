version: 2.1

jobs:
  deploy_prod:
    machine: true
    environment:
      HEROKU_APP_NAME: martech-test
    steps:
      - checkout
      - run: 
          name: deploy to martech-test
          command: |
            docker info
            docker build -t flask-api .
            docker login --username=$DOCKER_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
            docker tag flask-api registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
            chmod +x .circleci/heroku-setup.sh
            .circleci/heroku-setup.sh 
            heroku container:release web -a $HEROKU_APP_NAME
            
  deploy_dev:
    machine: true
    environment:
      HEROKU_APP_NAME: martech-test-dev
    steps:
      - checkout
      - run: 
          name: deploy to martech-test-dev
          command: |
            docker info
            docker build -t flask-api .
            docker login --username=$DOCKER_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
            docker tag flask-api registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
            chmod +x .circleci/heroku-setup.sh
            .circleci/heroku-setup.sh 
            heroku container:release web -a $HEROKU_APP_NAME

  deploy_test:
    machine: true
    environment:
      HEROKU_APP_NAME: flask-analytics-circleci
    steps:
      - checkout
      - run: 
          name: deploy to martech-test-dev
          command: |
            docker info
            docker build -t flask-api .
            docker login --username=$DOCKER_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
            docker tag flask-api registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
            chmod +x .circleci/heroku-setup.sh
            .circleci/heroku-setup.sh 
            heroku container:release web -a $HEROKU_APP_NAME

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - deploy_prod:
          filters:
            branches:
              only: 
                - master
      - deploy_dev:
          filters:
            branches:
              only: 
                - dev
      - deploy_test:
          filters:
            branches:
              only:
                - redisPlay
  